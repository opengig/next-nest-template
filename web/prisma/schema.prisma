
        generator client {
          provider = "prisma-client-js"
        }
        
        datasource db {
          provider = "postgresql"
          url      = "postgresql://opengig:Database2024!@opengigmvp.postgres.database.azure.com:5432/hi2aa1a043?schema=public"
        }
      
model User {
    id          Int       @id @default(autoincrement())
    email       String    @unique
    password    String?
    username    String
    name        String?
    role        String?   @default("user")
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    courses     Course[]  @relation("CourseTutor")
    enrollments Enrollment[]
}

model Course {
    id          Int        @id @default(autoincrement())
    tutorId     Int
    title       String
    description String?
    zoomLink    String?
    price       Float
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    tutor       User       @relation("CourseTutor", fields: [tutorId], references: [id])
    slots       CourseSlot[]
    enrollments Enrollment[]
}

model CourseSlot {
    id         Int      @id @default(autoincrement())
    courseId   Int
    startTime  DateTime
    endTime    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    course     Course   @relation(fields: [courseId], references: [id])
}

model Enrollment {
    id            Int      @id @default(autoincrement())
    studentId     Int
    courseId      Int
    enrollmentDate DateTime @default(now())
    paymentStatus String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    student       User     @relation(fields: [studentId], references: [id])
    course        Course   @relation(fields: [courseId], references: [id])
    payment       Payment?
}

model Payment {
    id            Int      @id @default(autoincrement())
    enrollmentId  Int      @unique
    amount        Float
    paymentMethod String
    paymentDate   DateTime @default(now())
    status        String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
}